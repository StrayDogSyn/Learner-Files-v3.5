# Trae SOLO + Claude 4.1 API Integration Configuration
# Intelligent Portfolio Management with AI-Powered Automation

name: "claude-solo-portfolio-intelligence"
version: "1.0.0"
description: "AI-powered portfolio management using Claude 4.1 and Trae SOLO agents"

# Global Configuration
global:
  api:
    claude:
      endpoint: "https://api.anthropic.com/v1/messages"
      model: "claude-3-5-sonnet-20241022"  # Latest Claude model
      max_tokens: 4096
      temperature: 0.7
      timeout: 30000
      retry_attempts: 3
      rate_limit:
        requests_per_minute: 50
        tokens_per_minute: 40000
  
  environment:
    variables:
      ANTHROPIC_API_KEY: "${ANTHROPIC_API_KEY}"
      GITHUB_TOKEN: "${GITHUB_TOKEN}"
      PORTFOLIO_BASE_URL: "https://straydog-syndications-llc.com"
      CONTENT_REPO: "straydogsyndications/portfolio-content"
      ANALYTICS_ENDPOINT: "${ANALYTICS_ENDPOINT}"
  
  logging:
    level: "info"
    format: "json"
    destinations:
      - console
      - file: ".trae/logs/claude-solo.log"
      - webhook: "${SLACK_WEBHOOK_URL}"

# SOLO Agents Configuration
agents:
  # Code Review Agent
  code_reviewer:
    name: "Claude Code Reviewer"
    description: "Automated code review and suggestions using Claude 4.1"
    type: "solo"
    
    triggers:
      - event: "github.push"
        branches: ["main", "develop", "feature/*"]
      - event: "github.pull_request"
        actions: ["opened", "synchronize"]
      - schedule: "0 9 * * 1-5"  # Weekdays at 9 AM
    
    claude_config:
      system_prompt: |
        You are an expert code reviewer specializing in React, TypeScript, and modern web development.
        Analyze the provided code for:
        1. Code quality and best practices
        2. Performance optimizations
        3. Security vulnerabilities
        4. Accessibility improvements
        5. TypeScript type safety
        6. React patterns and hooks usage
        7. CSS/Tailwind optimization
        
        Provide specific, actionable feedback with code examples.
      
      context_files:
        - "src/**/*.{ts,tsx,js,jsx}"
        - "*.{json,yml,yaml}"
        - "README.md"
      
      output_format: "markdown"
      include_suggestions: true
      severity_levels: ["error", "warning", "info", "suggestion"]
    
    actions:
      - type: "github_comment"
        target: "pull_request"
        template: |
          ## ðŸ¤– Claude Code Review
          
          **Analysis Date:** {{timestamp}}
          **Files Reviewed:** {{files_count}}
          
          {{review_content}}
          
          ---
          *Powered by Claude 4.1 & Trae SOLO*
      
      - type: "create_issue"
        condition: "severity >= error"
        labels: ["code-quality", "automated", "claude-review"]
      
      - type: "slack_notification"
        channel: "#dev-alerts"
        condition: "severity >= warning"

  # Content Generator Agent
  content_generator:
    name: "Claude Content Generator"
    description: "Automated content generation for projects and portfolio"
    type: "solo"
    
    triggers:
      - event: "project.created"
      - event: "project.updated"
      - event: "github.release"
      - schedule: "0 10 * * 2,4"  # Tuesday and Thursday at 10 AM
    
    claude_config:
      system_prompt: |
        You are a technical content writer specializing in software development and portfolio presentation.
        Generate engaging, professional content for:
        1. Project descriptions and documentation
        2. Technical blog posts
        3. Social media content
        4. README files
        5. Release notes
        6. Portfolio summaries
        
        Maintain a professional yet approachable tone. Include technical details while keeping content accessible.
      
      content_types:
        project_description:
          max_length: 500
          include_tech_stack: true
          include_features: true
          tone: "professional"
        
        blog_post:
          min_length: 1500
          include_code_examples: true
          include_images: true
          seo_optimized: true
        
        social_media:
          platforms: ["twitter", "linkedin", "github"]
          character_limits:
            twitter: 280
            linkedin: 3000
            github: 1000
        
        documentation:
          format: "markdown"
          include_installation: true
          include_usage: true
          include_examples: true
    
    actions:
      - type: "update_file"
        target: "README.md"
        section: "description"
      
      - type: "create_blog_post"
        directory: "content/blog"
        filename_template: "{{date}}-{{slug}}.md"
      
      - type: "social_media_post"
        platforms: ["twitter", "linkedin"]
        schedule_delay: "1h"
      
      - type: "update_portfolio"
        endpoint: "/api/projects/{{project_id}}"
        fields: ["description", "highlights", "tech_stack"]

  # SEO Optimizer Agent
  seo_optimizer:
    name: "Claude SEO Optimizer"
    description: "AI-powered SEO optimization and recommendations"
    type: "solo"
    
    triggers:
      - event: "content.published"
      - event: "page.created"
      - event: "page.updated"
      - schedule: "0 8 * * 1"  # Monday at 8 AM (weekly SEO audit)
    
    claude_config:
      system_prompt: |
        You are an SEO expert specializing in technical websites and developer portfolios.
        Analyze and optimize for:
        1. Meta titles and descriptions
        2. Header structure (H1-H6)
        3. Keyword optimization
        4. Internal linking opportunities
        5. Schema markup suggestions
        6. Core Web Vitals impact
        7. Mobile optimization
        8. Accessibility for SEO
        
        Provide specific, implementable recommendations with priority levels.
      
      analysis_scope:
        - meta_tags
        - content_structure
        - keyword_density
        - internal_links
        - external_links
        - image_optimization
        - page_speed_factors
        - mobile_responsiveness
      
      target_keywords:
        primary: ["software developer", "full stack developer", "react developer"]
        secondary: ["portfolio", "web development", "typescript", "javascript"]
        long_tail: ["experienced react developer portfolio", "full stack web developer projects"]
    
    actions:
      - type: "update_meta_tags"
        files: ["index.html", "src/**/*.tsx"]
      
      - type: "generate_sitemap"
        output: "public/sitemap.xml"
        include_lastmod: true
      
      - type: "create_seo_report"
        output: ".trae/reports/seo-analysis-{{date}}.md"
        include_recommendations: true
      
      - type: "update_schema_markup"
        types: ["Person", "WebSite", "Organization"]
      
      - type: "slack_notification"
        channel: "#seo-updates"
        condition: "recommendations_count > 0"

  # Performance Analyzer Agent
  performance_analyzer:
    name: "Claude Performance Analyzer"
    description: "AI-powered performance analysis and optimization"
    type: "solo"
    
    triggers:
      - event: "deployment.completed"
      - event: "performance.threshold_exceeded"
      - schedule: "0 */6 * * *"  # Every 6 hours
    
    claude_config:
      system_prompt: |
        You are a web performance expert specializing in React applications and modern web technologies.
        Analyze performance metrics and provide optimization recommendations for:
        1. Core Web Vitals (LCP, FID, CLS)
        2. Bundle size optimization
        3. Image optimization
        4. Code splitting opportunities
        5. Caching strategies
        6. Database query optimization
        7. CDN configuration
        8. Third-party script impact
        
        Prioritize recommendations by impact and implementation difficulty.
      
      metrics_sources:
        - lighthouse
        - web_vitals
        - bundle_analyzer
        - network_analysis
        - user_timing_api
      
      thresholds:
        lcp: 2.5  # seconds
        fid: 100  # milliseconds
        cls: 0.1  # score
        bundle_size: 500  # KB
        page_load: 3.0  # seconds
    
    actions:
      - type: "create_performance_report"
        output: ".trae/reports/performance-{{date}}.json"
        include_recommendations: true
      
      - type: "update_webpack_config"
        condition: "bundle_size > threshold"
        optimizations: ["code_splitting", "tree_shaking", "compression"]
      
      - type: "optimize_images"
        directory: "public/images"
        formats: ["webp", "avif"]
        quality: 85
      
      - type: "github_issue"
        condition: "critical_issues > 0"
        labels: ["performance", "critical", "automated"]
        assignees: ["${GITHUB_USERNAME}"]

# Automated Workflows
workflows:
  # Documentation Generation Workflow
  documentation_generator:
    name: "Automated Documentation Generation"
    description: "Generate comprehensive documentation from code"
    
    trigger:
      events: ["github.push"]
      conditions:
        - "files_changed.includes('src/')"
        - "branch == 'main'"
    
    steps:
      - name: "analyze_code_changes"
        agent: "code_reviewer"
        inputs:
          files: "{{changed_files}}"
          analysis_type: "documentation"
      
      - name: "generate_api_docs"
        agent: "content_generator"
        inputs:
          content_type: "api_documentation"
          source_files: "src/**/*.{ts,tsx}"
          output_format: "markdown"
      
      - name: "update_readme"
        agent: "content_generator"
        inputs:
          content_type: "readme_update"
          sections: ["installation", "usage", "api", "examples"]
      
      - name: "generate_changelog"
        agent: "content_generator"
        inputs:
          content_type: "changelog"
          version: "{{git.tag}}"
          commits: "{{git.commits_since_last_tag}}"
    
    outputs:
      - "docs/api.md"
      - "README.md"
      - "CHANGELOG.md"
    
    notifications:
      - type: "slack"
        channel: "#documentation"
        message: "ðŸ“š Documentation updated for {{project_name}}"

  # Social Media Content Workflow
  social_media_automation:
    name: "Social Media Content Automation"
    description: "Generate and schedule social media content from portfolio updates"
    
    trigger:
      events: ["project.published", "blog.published", "github.release"]
    
    steps:
      - name: "analyze_content"
        agent: "content_generator"
        inputs:
          content_source: "{{trigger.data}}"
          analysis_type: "social_media_potential"
      
      - name: "generate_posts"
        agent: "content_generator"
        inputs:
          content_type: "social_media"
          platforms: ["twitter", "linkedin", "github"]
          tone: "professional_casual"
          include_hashtags: true
      
      - name: "optimize_for_engagement"
        agent: "seo_optimizer"
        inputs:
          content: "{{previous_step.output}}"
          optimization_type: "social_engagement"
      
      - name: "schedule_posts"
        type: "external_api"
        endpoint: "${SOCIAL_MEDIA_SCHEDULER_API}"
        schedule:
          twitter: "+30m"
          linkedin: "+1h"
          github: "+2h"
    
    conditions:
      - "content_quality_score >= 7"
      - "engagement_potential >= 6"
    
    notifications:
      - type: "slack"
        channel: "#marketing"
        message: "ðŸ“± Social media content scheduled for {{platforms}}"

  # Technical Blog Post Workflow
  blog_post_automation:
    name: "Technical Blog Post Generation"
    description: "Create technical blog posts about projects and technologies"
    
    trigger:
      schedule: "0 14 * * 3"  # Wednesday at 2 PM
      conditions:
        - "recent_commits > 10"
        - "new_features_added == true"
    
    steps:
      - name: "identify_blog_topics"
        agent: "content_generator"
        inputs:
          analysis_scope: "recent_development_activity"
          timeframe: "last_2_weeks"
          topic_types: ["technical_deep_dive", "tutorial", "case_study"]
      
      - name: "research_topic"
        agent: "content_generator"
        inputs:
          topic: "{{previous_step.selected_topic}}"
          research_depth: "comprehensive"
          include_external_sources: true
      
      - name: "write_blog_post"
        agent: "content_generator"
        inputs:
          content_type: "technical_blog_post"
          word_count: "1500-2500"
          include_code_examples: true
          include_diagrams: true
      
      - name: "seo_optimization"
        agent: "seo_optimizer"
        inputs:
          content: "{{previous_step.output}}"
          target_keywords: "{{topic_keywords}}"
          optimization_level: "comprehensive"
      
      - name: "performance_check"
        agent: "performance_analyzer"
        inputs:
          content_type: "blog_post"
          check_image_optimization: true
          check_loading_impact: true
    
    outputs:
      - "content/blog/{{date}}-{{slug}}.md"
      - "public/images/blog/{{slug}}/"
    
    post_actions:
      - type: "social_media_promotion"
        delay: "1h"
      - type: "newsletter_inclusion"
        delay: "1d"

  # Meta Content Generation Workflow
  meta_content_automation:
    name: "Meta Descriptions and Titles Generation"
    description: "Generate optimized meta descriptions and titles for all pages"
    
    trigger:
      events: ["page.created", "content.updated"]
      schedule: "0 9 * * 1"  # Monday at 9 AM (weekly optimization)
    
    steps:
      - name: "analyze_page_content"
        agent: "seo_optimizer"
        inputs:
          pages: "{{all_pages}}"
          analysis_type: "meta_optimization"
      
      - name: "generate_meta_titles"
        agent: "content_generator"
        inputs:
          content_type: "meta_title"
          max_length: 60
          include_brand: true
          keyword_optimization: true
      
      - name: "generate_meta_descriptions"
        agent: "content_generator"
        inputs:
          content_type: "meta_description"
          max_length: 160
          include_call_to_action: true
          keyword_optimization: true
      
      - name: "validate_meta_content"
        agent: "seo_optimizer"
        inputs:
          validation_type: "meta_tags"
          check_duplicates: true
          check_length: true
          check_keywords: true
    
    outputs:
      - "src/data/meta-tags.json"
      - ".trae/reports/meta-optimization-{{date}}.md"

# Smart Triggers Configuration
triggers:
  # Code Quality Improvement Triggers
  code_quality:
    name: "Code Quality Monitoring"
    
    conditions:
      - type: "code_complexity"
        threshold: 10
        metric: "cyclomatic_complexity"
      
      - type: "test_coverage"
        threshold: 80
        operator: "less_than"
      
      - type: "eslint_errors"
        threshold: 0
        operator: "greater_than"
      
      - type: "typescript_errors"
        threshold: 0
        operator: "greater_than"
    
    actions:
      - agent: "code_reviewer"
        priority: "high"
        inputs:
          focus_areas: ["complexity_reduction", "test_coverage", "error_fixing"]
    
    notifications:
      - type: "slack"
        channel: "#code-quality"
        severity: "warning"

  # Content Freshness Triggers
  content_freshness:
    name: "Content Freshness Monitoring"
    
    conditions:
      - type: "content_age"
        threshold: "30d"
        content_types: ["project_descriptions", "blog_posts", "documentation"]
      
      - type: "technology_updates"
        sources: ["npm_updates", "framework_releases", "tool_updates"]
      
      - type: "portfolio_metrics"
        metrics: ["page_views", "engagement_rate", "bounce_rate"]
        trend: "declining"
    
    actions:
      - agent: "content_generator"
        priority: "medium"
        inputs:
          update_type: "refresh"
          focus_areas: ["outdated_content", "new_technologies", "improved_examples"]
    
    schedule:
      check_frequency: "daily"
      execution_time: "09:00"

  # Technology Stack Documentation Triggers
  tech_stack_documentation:
    name: "Technology Stack Documentation"
    
    conditions:
      - type: "dependency_changes"
        files: ["package.json", "package-lock.json"]
      
      - type: "new_technology_adoption"
        detection_methods: ["import_analysis", "config_file_changes"]
      
      - type: "version_updates"
        significance: ["major", "minor"]
    
    actions:
      - agent: "content_generator"
        priority: "medium"
        inputs:
          content_type: "tech_stack_documentation"
          include_migration_guides: true
          include_best_practices: true
    
    outputs:
      - "docs/tech-stack.md"
      - "docs/migration-guides/"

  # Portfolio Analytics Reporting Triggers
  analytics_reporting:
    name: "Portfolio Analytics Reporting"
    
    conditions:
      - type: "performance_threshold"
        metrics:
          page_load_time: "> 3s"
          core_web_vitals: "< good"
          lighthouse_score: "< 90"
      
      - type: "traffic_anomaly"
        detection: "statistical_analysis"
        threshold: "2_standard_deviations"
      
      - type: "conversion_rate"
        threshold: "< 2%"
        pages: ["contact", "projects", "about"]
    
    actions:
      - agent: "performance_analyzer"
        priority: "high"
        inputs:
          analysis_type: "comprehensive"
          include_recommendations: true
      
      - agent: "content_generator"
        inputs:
          content_type: "analytics_report"
          include_insights: true
          include_action_items: true
    
    schedule:
      frequency: "weekly"
      day: "monday"
      time: "08:00"

# Integration Points
integrations:
  # GitHub Webhook Integration
  github:
    webhooks:
      - event: "push"
        url: "${TRAE_WEBHOOK_URL}/github/push"
        secret: "${GITHUB_WEBHOOK_SECRET}"
        triggers: ["code_reviewer", "documentation_generator"]
      
      - event: "pull_request"
        url: "${TRAE_WEBHOOK_URL}/github/pr"
        secret: "${GITHUB_WEBHOOK_SECRET}"
        triggers: ["code_reviewer"]
      
      - event: "release"
        url: "${TRAE_WEBHOOK_URL}/github/release"
        secret: "${GITHUB_WEBHOOK_SECRET}"
        triggers: ["content_generator", "social_media_automation"]
    
    api_integration:
      base_url: "https://api.github.com"
      authentication: "token"
      rate_limit_handling: true
      retry_strategy: "exponential_backoff"

  # Portfolio Update Detection
  portfolio_monitoring:
    endpoints:
      - url: "${PORTFOLIO_BASE_URL}/api/projects"
        method: "GET"
        check_frequency: "5m"
        change_detection: "content_hash"
      
      - url: "${PORTFOLIO_BASE_URL}/api/analytics"
        method: "GET"
        check_frequency: "1h"
        metrics: ["page_views", "unique_visitors", "bounce_rate"]
    
    triggers:
      - condition: "content_changed"
        agents: ["seo_optimizer", "content_generator"]
      
      - condition: "performance_degraded"
        agents: ["performance_analyzer"]

  # Performance Threshold Monitoring
  performance_monitoring:
    lighthouse_ci:
      url: "${LIGHTHOUSE_CI_SERVER_URL}"
      frequency: "hourly"
      thresholds:
        performance: 90
        accessibility: 95
        best_practices: 90
        seo: 95
    
    real_user_monitoring:
      endpoint: "${RUM_ENDPOINT}"
      metrics: ["lcp", "fid", "cls", "ttfb"]
      alert_thresholds:
        lcp: 2.5
        fid: 100
        cls: 0.1
        ttfb: 600
    
    triggers:
      - condition: "threshold_exceeded"
        agents: ["performance_analyzer"]
        priority: "high"

  # Content Gap Analysis
  content_analysis:
    seo_tools:
      - name: "google_search_console"
        api_key: "${GSC_API_KEY}"
        metrics: ["impressions", "clicks", "position", "ctr"]
      
      - name: "semrush"
        api_key: "${SEMRUSH_API_KEY}"
        analysis: ["keyword_gaps", "competitor_analysis"]
    
    content_audit:
      frequency: "weekly"
      analysis_types:
        - "keyword_coverage"
        - "content_freshness"
        - "internal_linking"
        - "user_engagement"
    
    triggers:
      - condition: "content_gap_identified"
        agents: ["content_generator", "seo_optimizer"]
        priority: "medium"

# Monitoring and Alerting
monitoring:
  health_checks:
    claude_api:
      endpoint: "https://api.anthropic.com/v1/messages"
      frequency: "5m"
      timeout: "10s"
      expected_status: 200
    
    agents_status:
      check_frequency: "1m"
      metrics: ["response_time", "success_rate", "error_rate"]
    
    workflow_execution:
      track_duration: true
      track_success_rate: true
      alert_on_failure: true
  
  alerts:
    channels:
      - type: "slack"
        webhook: "${SLACK_WEBHOOK_URL}"
        severity_levels: ["error", "warning"]
      
      - type: "email"
        recipients: ["${DEVELOPER_EMAIL}"]
        severity_levels: ["error"]
    
    conditions:
      - name: "claude_api_down"
        condition: "health_check.claude_api.status != 200"
        severity: "error"
      
      - name: "agent_failure_rate_high"
        condition: "agents.error_rate > 10%"
        severity: "warning"
      
      - name: "workflow_execution_failed"
        condition: "workflow.status == 'failed'"
        severity: "error"

# Security and Compliance
security:
  api_key_management:
    encryption: "AES-256"
    rotation_frequency: "90d"
    access_logging: true
  
  data_privacy:
    gdpr_compliance: true
    data_retention: "1y"
    anonymization: true
  
  audit_logging:
    enabled: true
    log_level: "info"
    include_request_data: false
    include_response_data: false

# Performance Optimization
performance:
  caching:
    claude_responses:
      ttl: "1h"
      max_size: "100MB"
      strategy: "lru"
    
    workflow_results:
      ttl: "24h"
      max_size: "500MB"
      strategy: "lru"
  
  rate_limiting:
    claude_api:
      requests_per_minute: 50
      burst_limit: 10
    
    github_api:
      requests_per_hour: 5000
      burst_limit: 100
  
  optimization:
    parallel_execution: true
    max_concurrent_agents: 5
    queue_management: "priority_based"
    resource_limits:
      memory: "2GB"
      cpu: "2 cores"

# Backup and Recovery
backup:
  configuration:
    frequency: "daily"
    retention: "30d"
    location: ".trae/backups/"
  
  agent_state:
    frequency: "hourly"
    retention: "7d"
    include_context: true
  
  workflow_history:
    frequency: "real-time"
    retention: "90d"
    include_outputs: true

# Success Metrics and KPIs
metrics:
  code_quality:
    - name: "automated_review_coverage"
      target: "> 95%"
    - name: "issue_resolution_time"
      target: "< 24h"
    - name: "code_quality_score"
      target: "> 8.5/10"
  
  content_generation:
    - name: "content_freshness"
      target: "< 30d average age"
    - name: "seo_score_improvement"
      target: "> 10% monthly"
    - name: "engagement_rate"
      target: "> 5% increase monthly"
  
  performance:
    - name: "lighthouse_score"
      target: "> 90 average"
    - name: "core_web_vitals"
      target: "all metrics in 'good' range"
    - name: "page_load_time"
      target: "< 2s average"
  
  automation_efficiency:
    - name: "manual_task_reduction"
      target: "> 80%"
    - name: "workflow_success_rate"
      target: "> 95%"
    - name: "time_to_deployment"
      target: "< 10m average"