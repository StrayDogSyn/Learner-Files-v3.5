@tailwind base;
@tailwind components;
@tailwind utilities;

/* Hunter Green Professional Color Palette */
:root {
  --hunter-primary: #2D5016;
  --hunter-secondary: #4A7C59;
  --hunter-accent: #6B8E23;
  --hunter-light: #8FBC8F;
  --hunter-dark: #1C3A0E;
  --glass-bg: rgba(45, 80, 22, 0.15);
  --glass-border: rgba(139, 188, 143, 0.2);
  --text-primary: #F8FAFC;
  --text-secondary: #CBD5E1;
  --text-muted: #94A3B8;
}

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',
    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  background: #1C1C1C;
  color: var(--text-primary);
  min-height: 100vh;
  overflow-x: hidden;
  position: relative;
}

body::before {
  content: '';
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: 
    radial-gradient(circle at 20% 80%, rgba(45, 80, 22, 0.3) 0%, transparent 50%),
    radial-gradient(circle at 80% 20%, rgba(74, 124, 89, 0.3) 0%, transparent 50%),
    radial-gradient(circle at 40% 40%, rgba(107, 142, 35, 0.2) 0%, transparent 50%);
  pointer-events: none;
  z-index: -1;
}

html {
  scroll-behavior: smooth;
}

/* Hunter Green Glassmorphism */
.glass {
  background: var(--glass-bg);
  backdrop-filter: blur(12px);
  -webkit-backdrop-filter: blur(12px);
  border: 1px solid var(--glass-border);
  border-radius: 20px;
  box-shadow: 
    0 8px 32px rgba(45, 80, 22, 0.2),
    inset 0 1px 0 rgba(139, 188, 143, 0.1);
}

.glass-dark {
  background: rgba(28, 58, 14, 0.25);
  backdrop-filter: blur(16px);
  -webkit-backdrop-filter: blur(16px);
  border: 1px solid rgba(139, 188, 143, 0.15);
  border-radius: 24px;
  box-shadow: 
    0 12px 40px rgba(28, 58, 14, 0.3),
    inset 0 1px 0 rgba(139, 188, 143, 0.1);
}

/* Custom scrollbar */
::-webkit-scrollbar {
  width: 8px;
}

::-webkit-scrollbar-track {
  background: var(--hunter-dark);
}

::-webkit-scrollbar-thumb {
  background: var(--hunter-accent);
  border-radius: 4px;
}

::-webkit-scrollbar-thumb:hover {
  background: var(--hunter-light);
}

/* Hunter Green Glassmorphic Components */
.glass-card {
  background: rgba(45, 80, 22, 0.15);
  backdrop-filter: blur(20px);
  -webkit-backdrop-filter: blur(20px);
  border: 1px solid rgba(74, 124, 89, 0.2);
  border-radius: 16px;
  padding: 2rem;
  transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
  box-shadow: 0 8px 32px rgba(45, 80, 22, 0.1);
}

.glass-card:hover {
  transform: translateY(-8px) scale(1.02);
  background: rgba(45, 80, 22, 0.25);
  border-color: rgba(74, 124, 89, 0.4);
  box-shadow: 0 20px 60px rgba(45, 80, 22, 0.2), 0 0 40px rgba(74, 124, 89, 0.1);
}

.glass-nav {
  background: rgba(11, 11, 11, 0.8);
  backdrop-filter: blur(20px);
  -webkit-backdrop-filter: blur(20px);
  border-bottom: 1px solid rgba(74, 124, 89, 0.2);
}

/* Gradient Text Effects */
.gradient-text {
  background: linear-gradient(135deg, var(--hunter-accent) 0%, var(--hunter-light) 50%, #7dd3fc 100%);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
}

.gradient-text-alt {
  background: linear-gradient(90deg, var(--hunter-light) 0%, var(--hunter-accent) 100%);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
}

/* Animated Particle Background */
.particles {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  z-index: 1;
}

.particle {
  position: absolute;
  width: 2px;
  height: 2px;
  background: var(--hunter-accent);
  border-radius: 50%;
  opacity: 0.6;
  animation: float-particle linear infinite;
}

@keyframes float-particle {
  0% {
    transform: translateY(100vh) rotate(0deg);
    opacity: 0;
  }
  10% {
    opacity: 0.6;
  }
  90% {
    opacity: 0.6;
  }
  100% {
    transform: translateY(-10vh) rotate(360deg);
    opacity: 0;
  }
}

/* Professional Animations */
@keyframes animate-fade-in-up {
  0% {
    opacity: 0;
    transform: translateY(30px);
  }
  100% {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes animate-float {
  0%, 100% {
    transform: translateY(0px);
  }
  50% {
    transform: translateY(-10px);
  }
}

@keyframes animate-pulse-hunter {
  0%, 100% {
    box-shadow: 0 0 20px rgba(74, 124, 89, 0.3);
  }
  50% {
    box-shadow: 0 0 30px rgba(74, 124, 89, 0.5), 0 0 40px rgba(45, 80, 22, 0.2);
  }
}

.animate-fade-in-up {
  animation: animate-fade-in-up 0.8s ease-out forwards;
}

.animate-float {
  animation: animate-float 3s ease-in-out infinite;
}

.animate-pulse-hunter {
  animation: animate-pulse-hunter 2s ease-in-out infinite;
}

/* Responsive Design */
@media (max-width: 768px) {
  .glass-card {
    padding: 1.5rem;
  }
  
  .particles {
    display: none; /* Hide particles on mobile for performance */
  }
}

/* Glassmorphism Effects */
.glass-card {
  background: rgba(53, 94, 59, 0.1);
  -webkit-backdrop-filter: blur(16px);
  backdrop-filter: blur(16px);
  border: 1px solid rgba(53, 94, 59, 0.2);
  border-radius: 16px;
}

.glass-subtle {
  background: rgba(53, 94, 59, 0.05);
  -webkit-backdrop-filter: blur(8px);
  backdrop-filter: blur(8px);
  border: 1px solid rgba(53, 94, 59, 0.1);
}

.glass-medium {
  background: rgba(53, 94, 59, 0.15);
  -webkit-backdrop-filter: blur(20px);
  backdrop-filter: blur(20px);
  border: 1px solid rgba(53, 94, 59, 0.3);
}

/* Button Styles */
.glass-button {
  background: rgba(53, 94, 59, 0.1);
  -webkit-backdrop-filter: blur(16px);
  backdrop-filter: blur(16px);
  border: 1px solid rgba(53, 94, 59, 0.2);
  color: var(--hunter-200);
  transition: all 0.3s ease;
}

.glass-button:hover {
  background: rgba(53, 94, 59, 0.2);
  border-color: rgba(53, 94, 59, 0.4);
  color: var(--hunter-100);
}

.glass-button-primary {
  background: linear-gradient(135deg, var(--hunter-500) 0%, var(--hunter-600) 100%);
  color: white;
  border: 1px solid var(--hunter-500);
  transition: all 0.3s ease;
}

.glass-button-primary:hover {
  background: linear-gradient(135deg, var(--hunter-600) 0%, var(--hunter-700) 100%);
  border-color: var(--hunter-600);
  transform: translateY(-2px);
  box-shadow: 0 8px 25px rgba(53, 94, 59, 0.3);
}

/* Animation Classes */
@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(30px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes fadeInLeft {
  from {
    opacity: 0;
    transform: translateX(-30px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes fadeInRight {
  from {
    opacity: 0;
    transform: translateX(30px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

.animate-fade-in-up {
  opacity: 0;
  transform: translateY(30px);
  transition: all 0.8s cubic-bezier(0.4, 0, 0.2, 1);
}

.animate-fade-in-up.in-view {
  opacity: 1;
  transform: translateY(0);
}

.animate-scale-in {
  opacity: 0;
  transform: scale(0.9);
  transition: all 0.6s cubic-bezier(0.4, 0, 0.2, 1);
}

.animate-scale-in.in-view {
  opacity: 1;
  transform: scale(1);
}

.animate-slide-in-left {
  opacity: 0;
  transform: translateX(-50px);
  transition: all 0.8s cubic-bezier(0.4, 0, 0.2, 1);
}

.animate-slide-in-left.in-view {
  opacity: 1;
  transform: translateX(0);
}

.animate-slide-in-right {
  opacity: 0;
  transform: translateX(50px);
  transition: all 0.8s cubic-bezier(0.4, 0, 0.2, 1);
}

.animate-slide-in-right.in-view {
  opacity: 1;
  transform: translateX(0);
}

.animate-fade-in-left {
  animation: fadeInLeft 0.6s ease-out;
}

.animate-fade-in-right {
  animation: fadeInRight 0.6s ease-out;
}

/* Utility Classes */
.text-shadow {
  text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
}

.text-shadow-lg {
  text-shadow: 0 4px 8px rgba(0, 0, 0, 0.4);
}

/* Responsive Typography */
@media (max-width: 640px) {
  h1 {
    font-size: 2rem;
    line-height: 2.5rem;
  }

  h2 {
    font-size: 1.5rem;
    line-height: 2rem;
  }

  h3 {
    font-size: 1.25rem;
    line-height: 1.75rem;
  }
}

/* Focus States */
.focus-ring:focus {
  outline: 2px solid var(--hunter-400);
  outline-offset: 2px;
}

/* Loading States */
.loading {
  opacity: 0.6;
  pointer-events: none;
}

.loading::after {
  content: "";
  position: absolute;
  top: 50%;
  left: 50%;
  width: 20px;
  height: 20px;
  margin: -10px 0 0 -10px;
  border: 2px solid var(--hunter-400);
  border-top-color: transparent;
  border-radius: 50%;
  animation: spin 1s linear infinite;
}

@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}
