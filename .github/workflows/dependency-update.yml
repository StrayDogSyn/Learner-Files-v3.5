name: Dependency Updates

on:
  schedule:
    # Run every Monday at 9 AM UTC
    - cron: '0 9 * * 1'
  workflow_dispatch: # Allow manual trigger

env:
  NODE_VERSION: '22'
  PNPM_VERSION: '9'

jobs:
  update-dependencies:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Update dependencies
        run: |
          pnpm update --latest --recursive
          pnpm install

      - name: Run tests after update
        run: |
          pnpm run type-check
          pnpm run lint
        continue-on-error: true

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: 'chore: update dependencies'
          title: 'chore: automated dependency updates'
          body: |
            ## Automated Dependency Updates
            
            This PR contains automated dependency updates for the monorepo.
            
            ### Changes
            - Updated all dependencies to their latest versions
            - Ran type checking and linting to ensure compatibility
            
            ### Review Checklist
            - [ ] Check for breaking changes in updated packages
            - [ ] Verify all applications still build correctly
            - [ ] Test critical functionality
            - [ ] Review security advisories for updated packages
            
            **Note**: This PR was created automatically. Please review carefully before merging.
          branch: chore/dependency-updates
          delete-branch: true

  security-audit:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run security audit
        run: |
          echo "## Security Audit Report" > security-report.md
          echo "Generated on: $(date)" >> security-report.md
          echo "" >> security-report.md
          
          # Run audit and capture output
          if pnpm audit --audit-level moderate --json > audit-output.json 2>&1; then
            echo "✅ No security vulnerabilities found" >> security-report.md
          else
            echo "⚠️ Security vulnerabilities detected" >> security-report.md
            echo "" >> security-report.md
            echo "### Vulnerabilities:" >> security-report.md
            cat audit-output.json >> security-report.md
          fi

      - name: Upload security report
        uses: actions/upload-artifact@v3
        with:
          name: security-audit-report
          path: security-report.md
          retention-days: 30

      - name: Comment on latest commit (if vulnerabilities found)
        if: failure()
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            const report = fs.readFileSync('security-report.md', 'utf8');
            
            github.rest.repos.createCommitComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              commit_sha: context.sha,
              body: `## 🔒 Security Audit Alert\n\n${report}`
            });